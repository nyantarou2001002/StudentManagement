<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.student.management.repository.StudentRepository">

  <!-- 受講生コースと申込状況をマッピングする resultMap -->
  <resultMap id="StudentCourseWithStatusMap" type="raisetech.student.management.data.StudentCourse">
    <id property="id" column="student_course_id" />
    <result property="studentId" column="student_id" />
    <result property="courseName" column="course_name" />
    <result property="courseStartAt" column="course_start_at" />
    <result property="courseEndAt" column="course_end_at" />
    <association property="courseStatus" javaType="raisetech.student.management.data.CourseStatus">
      <id property="id" column="course_status_id" />
      <result property="courseId" column="course_id" />
      <result property="status" column="status" />
    </association>
  </resultMap>

  <!-- 受講生の全件検索-->
  <select id="search" resultType="raisetech.student.management.data.Student">
    SELECT * FROM students;
  </select>

  <!--受講生IDに基づく検索-->
  <select id="searchStudent" parameterType="String" resultType="raisetech.student.management.data.Student">
    SELECT * FROM students WHERE id = #{id}
  </select>


  <!-- 受講生コースの全件検索 -->
  <select id="searchStudentCourseList" resultMap="StudentCourseWithStatusMap">
    SELECT sc.id AS student_course_id, sc.student_id, sc.course_name, sc.course_start_at, sc.course_end_at,
    cs.id AS course_status_id, cs.course_id, cs.status
    FROM students_courses sc
    LEFT JOIN course_status cs ON sc.id = cs.course_id
  </select>

  <!-- 受講生IDに基づくコースの検索 -->
  <select id="searchStudentCourses" resultMap="StudentCourseWithStatusMap">
    SELECT sc.id AS student_course_id, sc.student_id, sc.course_name, sc.course_start_at, sc.course_end_at,
    cs.id AS course_status_id, cs.course_id, cs.status
    FROM students_courses sc
    LEFT JOIN course_status cs ON sc.id = cs.course_id
    WHERE sc.student_id = #{studentId}
  </select>

  <!-- 受講生コースIDに基づくコースの検索 -->
  <select id="searchStudentCourse" resultMap="StudentCourseWithStatusMap">
    SELECT sc.id AS student_course_id, sc.student_id, sc.course_name, sc.course_start_at, sc.course_end_at,
    cs.id AS course_status_id, cs.course_id, cs.status
    FROM students_courses sc
    LEFT JOIN course_status cs ON sc.id = cs.course_id
    WHERE sc.id = #{id}
  </select>

  <!-- 受講生コース申込状況の全件検索 -->
  <select id="searchCourseStatusList" resultType="raisetech.student.management.data.CourseStatus">
    SELECT * FROM course_status
  </select>

  <!-- 受講生コースIDに基づく申込状況の検索 -->
  <select id="searchCourseStatus" resultType="raisetech.student.management.data.CourseStatus">
    SELECT * FROM course_status WHERE course_id = #{courseId}
  </select>

  <!-- 受講生の新規登録 -->
  <insert id="registerStudent" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students
    (name, kana_name, nickname, email, area, age, sex, remark, isDeleted)
    VALUES
    (#{name}, #{kanaName}, #{nickname}, #{email}, #{area}, #{age}, #{sex}, #{remark}, false)
  </insert>

  <!-- 受講生コースの新規登録 -->
  <insert id="registerStudentCourse" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students_courses
    (student_id, course_name, course_start_at, course_end_at)
    VALUES
    (#{studentId}, #{courseName}, #{courseStartAt}, #{courseEndAt})
  </insert>

  <!-- コース申込状況の新規登録 -->
  <insert id="registerCourseStatus" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO course_status(course_id, status) values(#{courseId}, '仮申込')
  </insert>

  <!-- 受講生情報の更新 -->
  <update id="updateStudent">
    UPDATE students
    SET
    name = #{name},
    kana_name = #{kanaName},
    nickname = #{nickname},
    email = #{email},
    area = #{area},
    age = #{age},
    sex = #{sex},
    remark = #{remark},
    isDeleted = #{isDeleted}
    WHERE id = #{id}
  </update>

  <!-- 受講生コースの更新 -->
  <update id="updateStudentCourse">
    UPDATE students_courses
    SET course_name = #{courseName}
    WHERE student_id = #{studentId}
  </update>

  <!-- コース申込状況の更新 -->
  <update id="updateCourseStatus">
    UPDATE course_status
    SET status = #{status}
    WHERE course_id = #{courseId}
  </update>

</mapper>